on:
  ##push:
  pull_request:
   types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  init_job:
    outputs:
      OUTPUT_TASK_IDS: ${{ steps.step_of_extract_task_id.outputs.TASK_IDS }}
      OUTPUT_SHARED_REF: ${{ steps.step_of_find_shared_link.outputs.SHARED_REF }}
    runs-on: ubuntu-20.04
    steps:
      - name : Print Title of PR
        run: | 
          echo "The Title of your PR is ${{ github.event.pull_request.title }}"
          echo "The Title of your PR is ${{ github.event.pull_request.body  }}"

      - name: Set env
        run: | 
          echo "TEST=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "Test0 == ${{ env.TEST }}"
      - name: Get env
        run: echo "Test1 == ${{ env.TEST }}"
      
      - name: Extract task id
        id: step_of_extract_task_id
        env:
          PULL_REQUEST_BODY: ${{ github.event.pull_request.body }}
        run: |
          echo "PULL_REQUEST_BODY = ${{ env.PULL_REQUEST_BODY }}"

          TASK_IDS="$(echo ${PULL_REQUEST_BODY} | grep -Eo "\[EMAM3MT5-[0-9]+" | cut -c 2-)"
          echo TASK_IDS=$TASK_IDS >> $GITHUB_ENV
          echo $TASK_IDS
          
          # Result for second job
          echo TASK_IDS=$TASK_IDS >> $GITHUB_OUTPUT
          
      - name: (RESULT) Get TASK_IDS env
        run: | 
          echo "TASK_IDS == ${{ env.TASK_IDS }}"
          
          TASK_IDS=(${TASK_IDS[@]})
            for i in "${TASK_IDS[@]}"; do
              echo "$i";
          done
#--------------------------------------------------------------------
      - name: Get SHARED Pull Requests
        uses: octokit/request-action@v2.x
        id: get_shared_prs
        with:
          route: GET /repos/{owner}/{repo}/pulls
          owner: TakeprofitTechnology
          repo: Shared
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Set SHARED refs
        id: step_of_find_shared_link
        env:
          SHARED_PRS: ${{ steps.get_shared_prs.outputs.data }}
        run: |
          TASK_IDS=(${TASK_IDS[@]})
          for i in "${TASK_IDS[@]}"; do
            tmp=$(echo $SHARED_PRS | jq -r --arg task_id "$i" '[.[] | select(.body!=null and (.body | contains($task_id))) | .number][0]')
            if [[ "$tmp" != "null" ]]; then SHARED_REF="$tmp"; fi
          done
          
          echo "SHARED_REF = ${SHARED_REF}"
          
          [[ $SHARED_REF ]] && SHARED_REF="refs/pull/${SHARED_REF}/merge" || SHARED_REF="refs/heads/master"
          echo SHARED_REF=$SHARED_REF >> $GITHUB_ENV
          
          # Result for second job
          echo SHARED_REF=$SHARED_REF >> $GITHUB_OUTPUT

      - name: (RESULT) Get SHARED_REF env
        run: echo "SHARED_REF == ${{ env.SHARED_REF }}"
#--------------------------------------------------------------------

  print_title_of_pr:
    runs-on: windows-latest
    needs: init_job
    steps:
    - name : Print Outputs
      run: |
        echo "output_youtrack_task_id = ${{needs.init_job.outputs.output_youtrack_task_id}}"
        echo "output_shared_ref = ${{needs.init_job.outputs.output_shared_ref}}"    
